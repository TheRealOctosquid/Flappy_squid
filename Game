<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Underwater Flappy Squid</title>
    <style>
        canvas {
            border: 1px solid #000;
            display: block;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas" width="320" height="480"></canvas>
    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');

        // Game variables
        let squidY = canvas.height / 2;
        let squidVelocity = 0;
        const gravity = 0.5;
        const jumpStrength = -10;
        const coralGap = 100;
        const coralWidth = 50;
        let score = 0;
        let corals = [];

        // Create initial corals
        for (let i = 0; i < 3; i++) {
            corals.push({
                x: canvas.width + i * 200,
                y: Math.random() * (canvas.height - coralGap)
            });
        }

        function drawSquid(x, y) {
            ctx.fillStyle = '#FF69B4';
            ctx.beginPath();
            ctx.ellipse(x, y, 20, 15, 0, 0, Math.PI * 2);
            ctx.fill();
            
            // Tentacles
            for (let i = 0; i < 4; i++) {
                ctx.beginPath();
                ctx.moveTo(x - 15, y + 15);
                ctx.quadraticCurveTo(x - 15 + i * 10, y + 40, x - 5 + i * 10, y + 30);
                ctx.stroke();
            }
        }

        function drawCoral(x, y) {
            ctx.fillStyle = '#FF7F50';
            ctx.fillRect(x, 0, coralWidth, y);
            ctx.fillRect(x, y + coralGap, coralWidth, canvas.height - y - coralGap);
        }

        function drawBackground() {
            const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);
            gradient.addColorStop(0, '#4B0082');
            gradient.addColorStop(1, '#00008B');
            ctx.fillStyle = gradient;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
        }

        function updateGame() {
            squidVelocity += gravity;
            squidY += squidVelocity;

            // Move corals
            corals.forEach(coral => {
                coral.x -= 2;

                // Check for collision
                if (
                    squidY < coral.y + 30 ||
                    squidY > coral.y + coralGap - 30
                ) {
                    if (
                        squidY < coral.y + 30 && squidY > coral.y ||
                        squidY > coral.y + coralGap - 30 && squidY < coral.y + coralGap
                    ) {
                        if (coral.x < 60 && coral.x + coralWidth > 30) {
                            alert('Game Over! Score: ' + score);
                            resetGame();
                        }
                    }
                }

                // Increase score
                if (coral.x + coralWidth < 30 && coral.x + coralWidth > 28) {
                    score++;
                }

                // Reset coral position
                if (coral.x + coralWidth < 0) {
                    coral.x = canvas.width;
                    coral.y = Math.random() * (canvas.height - coralGap);
                }
            });

            // Keep squid within canvas
            if (squidY > canvas.height - 15) {
                squidY = canvas.height - 15;
                squidVelocity = 0;
            }
            if (squidY < 15) {
                squidY = 15;
                squidVelocity = 0;
            }
        }

        function drawGame() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawBackground();
            drawSquid(30, squidY);
            corals.forEach(coral => drawCoral(coral.x, coral.y));
            
            ctx.fillStyle = 'white';
            ctx.font = '20px Arial';
            ctx.fillText('Score: ' + score, 10, 30);
        }

        function gameLoop() {
            updateGame();
            drawGame();
            requestAnimationFrame(gameLoop);
        }

        function resetGame() {
            squidY = canvas.height / 2;
            squidVelocity = 0;
            score = 0;
            corals = [];
            for (let i = 0; i < 3; i++) {
                corals.push({
                    x: canvas.width + i * 200,
                    y: Math.random() * (canvas.height - coralGap)
                });
            }
        }

        canvas.addEventListener('click', () => {
            squidVelocity = jumpStrength;
        });

        gameLoop();
    </script>
</body>
</html>
